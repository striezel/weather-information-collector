image: debian:12-slim

# build with GCC
build_gcc:
  stage: build
  services:
  - mariadb:10.5
  variables:
    MYSQL_DATABASE: "weather_information_collector"
    MYSQL_USER: "ci_user"
    MYSQL_PASSWORD: "ci_password"
    MYSQL_ROOT_PASSWORD: "ci_root_password"
  before_script:
    - apt-get update && apt-get -y install catch2 cmake g++ libcurl4-gnutls-dev libmariadb-dev pkg-config
    - export CC=gcc && export CXX=g++
  script:
    - ./ci/cpplint.sh
    - mkdir ./build
    - cd ./build
    - cmake ../ -DJSON_BENCHMARK=ON
    - make -j4
    - ctest -V
  # Keep build artifacts for later database tests.
  artifacts:
    paths:
      - build/

# build with Clang
build_clang:
  stage: build
  services:
  - mariadb:10.6
  variables:
    MYSQL_DATABASE: "weather_information_collector"
    MYSQL_USER: "ci_user"
    MYSQL_PASSWORD: "ci_password"
    MYSQL_ROOT_PASSWORD: "ci_root_password"
  before_script:
    - apt-get update && apt-get -y install catch2 clang cmake libc++-14-dev libcurl4-gnutls-dev libmariadb-dev pkg-config
    - export CC=clang && export CXX=clang++
  script:
    - ./ci/cpplint.sh
    - mkdir ./build
    - cd ./build
    - cmake ../ -DJSON_BENCHMARK=ON
    - make -j4
    - ctest -V

package_debian10:
  image: debian:10
  stage: build
  before_script:
    - ./ci/gitlab-01-install-dependencies.sh
  script:
    - ./ci/gitlab-02-create-package.sh
  only:
    - tags
  artifacts:
    paths:
      - "weather-information-collector*.deb"

coverage:
  stage: build
  services:
  - mariadb:10.4
  variables:
    MYSQL_DATABASE: "weather_information_collector"
    MYSQL_USER: "ci_user"
    MYSQL_PASSWORD: "ci_password"
    MYSQL_ROOT_PASSWORD: "ci_root_password"
  before_script:
    - apt-get update && apt-get -y install catch cmake g++ lcov libcurl4-gnutls-dev libmariadb-dev pkg-config
    - export CC=gcc && export CXX=g++
  script:
    - mkdir ./coverage
    - cd ./coverage
    - cmake ../ -DJSON_BENCHMARK=ON -DCODE_COVERAGE=ON
    - make -j4
    # tests
    - ctest -V
    # collect code coverage data
    - lcov -c --directory . --output-file coverage.info
    - lcov --remove coverage.info '/usr/*' '*tests/*' '*third-party/*' -o main_coverage.info
    - genhtml main_coverage.info --output-directory ../public
  coverage: /^[\t ]*lines\.*:\s*\d+.\d+\%/
  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    expire_in: 2 days
    paths:
      - public

pages:
  image: debian:12-slim
  stage: deploy
  needs: ["coverage"]
  dependencies:
  - coverage
  script:
    - ls -l
  artifacts:
    paths:
      - public

# Build the Docker image using the downloaded *.deb.
docker_in_docker:
  image: docker:20
  stage: build
  services:
    - docker:20-dind
  before_script:
    - docker info
  script:
    - cd docker && docker build . -f Dockerfile_download


# hidden YAML configuration to define an anchor named 'mariadb_configuration'
# See <https://docs.gitlab.com/ee/ci/yaml/#anchors> for more information.
.db_template: &mariadb_configuration
  stage: test
  needs: ["build_gcc"]
  dependencies:
  - build_gcc
  variables:
    MYSQL_DATABASE: "weather_information_collector"
    MYSQL_USER: "ci_user"
    MYSQL_PASSWORD: "ci_password"
    MYSQL_ROOT_PASSWORD: "ci_root_password"
    SKIP_NETWORK_TESTS: "true"
  before_script:
    - apt-get update && apt-get -y --no-install-suggests --no-install-recommends install cmake libcurl3-gnutls libmariadb3 libstdc++6
  script:
    - cd ./build
    - ctest -V

# Run tests with various MariaDB versions.
# (Versions 10.5 and 10.6 are already tested in the GCC and Clang builds, and
#  MariaDB 10.4 is tested in the coverage build job.)
mariadb_10_8:
  <<: *mariadb_configuration
  services:
  - mariadb:10.8

mariadb_10_9:
  <<: *mariadb_configuration
  services:
  - mariadb:10.9

mariadb_10_11:
  <<: *mariadb_configuration
  services:
  - mariadb:10.11

mysql_5_7:
  <<: *mariadb_configuration
  variables:
    MYSQL_DATABASE: "weather_information_collector"
    MYSQL_USER: "ci_user"
    MYSQL_PASSWORD: "ci_password"
    MYSQL_ROOT_PASSWORD: "ci_root_password"
    MYSQL_HOST: "mysql"
    SKIP_NETWORK_TESTS: "true"
  services:
  - mysql:5.7-debian

percona_5_7:
  <<: *mariadb_configuration
  variables:
    MYSQL_DATABASE: "weather_information_collector"
    MYSQL_USER: "ci_user"
    MYSQL_PASSWORD: "ci_password"
    MYSQL_ROOT_PASSWORD: "ci_root_password"
    MYSQL_HOST: "percona"
    SKIP_NETWORK_TESTS: "true"
  services:
  - percona:5.7

percona_8_0:
  <<: *mariadb_configuration
  variables:
    MYSQL_DATABASE: "weather_information_collector"
    MYSQL_USER: "ci_user"
    MYSQL_PASSWORD: "ci_password"
    MYSQL_ROOT_PASSWORD: "ci_root_password"
    MYSQL_HOST: "percona"
    SKIP_NETWORK_TESTS: "true"
  services:
  - percona:8.0

# Tests whether update program can update old table structure from version 0.5.3
# of the program.
updater_v0.5.3_structure:
  <<: *mariadb_configuration
  services:
  - mariadb:10.6
  script:
    - apt-get -y --no-install-suggests --no-install-recommends install mariadb-client
    - mysql -pci_password -u ci_user -hmariadb < ci/structure_v0.5.3.sql
    - touch connection.conf
    - echo "database.host=mariadb" >> connection.conf
    - echo "database.name=weather_information_collector" >> connection.conf
    - echo "database.user=ci_user" >> connection.conf
    - echo "database.password=ci_password" >> connection.conf
    - ./build/src/update/weather-information-collector-update -c connection.conf
