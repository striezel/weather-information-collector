name: MSYS2

on: push

jobs:
  msys2_mingw64:
    runs-on: windows-2022
    defaults:
      run:
        shell: msys2 {0}
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE.
      - uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          update: true
          install: >-
            git
            mingw-w64-x86_64-catch
            mingw-w64-x86_64-curl-winssl
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-libmariadbclient
            mingw-w64-x86_64-make
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-pkg-config
      - name: Build
        run: |
          export MSYSTEM=MINGW64
          export CXX=g++
          export CC=gcc
          cd "$GITHUB_WORKSPACE"
          mkdir build
          cd build
          cmake ../ -DJSON_BENCHMARK=ON
          cmake --build . -j4
      - name: Tests
        run: |
          export MSYSTEM=MINGW64
          cd "$GITHUB_WORKSPACE"/build
          ctest -V
      - name: Gather build artifacts
        run: |
          export MSYSTEM=MINGW64
          cd "$GITHUB_WORKSPACE"
          mkdir artifacts
          ./ci/copy-dll-dependencies.sh build/src/collector/weather-information-collector.exe artifacts/
          ./ci/copy-dll-dependencies.sh build/src/configtest/weather-information-collector-configtest.exe artifacts/
          ./ci/copy-dll-dependencies.sh build/src/creator/weather-information-collector-task-creator.exe artifacts/
          ./ci/copy-dll-dependencies.sh build/src/synchronizer/weather-information-collector-synchronizer.exe artifacts/
          ./ci/copy-dll-dependencies.sh build/src/update/weather-information-collector-update.exe artifacts/
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: weather-information-collector-windows-msys2
          path: |
            artifacts/*
