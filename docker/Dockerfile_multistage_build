# This version of the Dockerfile builds the *.deb package from the latest tagged
# version in the first stage and then copies the package to the second stage.
# That approach is slower than Dockerfile_download and takes longer to build,
# but it should be the most compatible approach for Docker 17.05 and later while
# still keeping the image size as low as Dockerfile_download.
#
FROM debian:10-slim AS build_deb
MAINTAINER Dirk Stolle <striezel-dev@web.de>

RUN mkdir -p /opt
WORKDIR /opt

# Update packages, install dependencies + root certificates.
RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y --no-install-recommends catch cmake g++ git \
    libcurl4-gnutls-dev libjsoncpp-dev libmariadb-dev \
    make pkg-config ca-certificates && \
    git clone https://gitlab.com/striezel/weather-information-collector.git
WORKDIR /opt/weather-information-collector
RUN ./ci/gitlab-01-install-dependencies.sh && \
    ./ci/gitlab-02-create-package.sh


# second image used as runtime environment
FROM debian:10-slim AS runtime
MAINTAINER Dirk Stolle <striezel-dev@web.de>

# Update packages, install dependencies + root certificates.
RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y --no-install-recommends ca-certificates tzdata && \
    apt-get install -y --no-install-recommends libcurl3-gnutls libmariadb3 && \
    mkdir -p /opt
WORKDIR /opt
COPY --from=build_deb /opt/weather-information-collector/weather-information-collector*.deb /opt/
RUN dpkg -i weather-information-collector*.deb && \
    apt-get autoremove -y

# Set timezone.
# Adjust the following line, if necessary.
# ENV TZ Etc/Utc
ENV TZ Europe/Berlin
RUN echo "$TZ" > /etc/timezone && \
    dpkg-reconfigure --frontend non-interactive tzdata && \
    echo "Current date is $(date)."
# Create new user that will be used to run the program.
RUN useradd --create-home wic
USER wic
WORKDIR /home/wic
# Copy configuration files.
RUN mkdir .wic
COPY --chown=wic:wic configuration .wic
# Show version after build. (May differ from current SCM checkout.)
RUN weather-information-collector --version
# Run it!
CMD weather-information-collector
